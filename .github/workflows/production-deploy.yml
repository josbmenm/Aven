name: Ono Production Deploy Skynet

on:
  push:
    branches:
      - cameron/*

# Expected pre-setup
# hostname -> IP in DNS

# Expected Secrets
#
# - target credentials (SKYNET_DEPLOY_KEY)
#   $ (mkfifo key key.pub && cat key key.pub &) && echo "y" | ssh-keygen -t rsa -b 4096 -C "GitHub Action $(date +%Y-%m-%d)" -N '' -q -f key 2>&1 > /dev/null ; rm key key.pub
# - journalbeat credentials (SKYNET_JOURNALBEAT_API__KEY)
# - Any other secrets to send to remote (See "Build Secrets File" step)

jobs:
  prepare-server:
    name: Prepare Server that we will run on
    runs-on: ubuntu-latest

    steps:
      - name: Test for needed Secret
        env:
          KEY: ${{ secrets.SKYNET_DEPLOY_KEY }}
        run: '[ "$KEY" != "" ]'

      - name: Checkout master
        uses: actions/checkout@master

      - name: Configure Npm
        run: |
          echo "color = always" >> .npmrc
          echo "loglevel = silent" >> .npmrc

      - name: Install Dependencies
        working-directory: production-server-prepare
        run: npm i --production

      - name: Install key file
        id: key
        env:
          KEY: ${{ secrets.SKYNET_DEPLOY_KEY }}
        run: |
          ls -l
          echo $KEY > deploy.key
          ls -l
          echo "::set-output name=filename::$(pwd)/deploy.key"

      - name: Add Know Host Key for skynet server
        run: echo |1|oaCJoUC9NwyF57pNeWT38bNcnuw=|A47nfKc12xPvIsWHU4tI9A0ADk0= ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBHPfzupCfPSZak6Ql1wy8Co2nP/5zWGxkjACX+1sHsZsYpJ2hi/+g7AyXC5ebcuKLwpeJMsdVBRCvwsa7RySFYY= >> ~/.ssh/known_hosts

      - name: Add ssh config
        run: |
          echo Host deploy > ~/.ssh/config
          echo HostName skynet.onoblends.co >> ~/.ssh/config
          echo Port 22 >>  ~/.ssh/config
          echo User root >> ~/.ssh/config
          echo IdentityFile ${{ steps.key.outputs.filename }} >> ~/.ssh/config

      - name: Run Prepare Script on Remote
        working-directory: production-server-prepare
        run: |
          scp -C dist/index.sh deploy-server:index.sh
          ssh deploy-server bash index.sh

      - name: Cleanup
        if: always()
        run: |
          rm ${{ steps.key.outputs.filename }}
          ssh deploy-server rm index.sh

  deploy-skynet:
    needs: [prepare-server] # Make sure production server is setup before we deploy to it
    name: Build and Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout master
        uses: actions/checkout@master

      - name: Configure Yarn
        run: | # I think yarn loads these
          echo "color = always" >> .npmrc
          echo "loglevel = silent" >> .npmrc

      - name: Install Dependencies
        run: yarn

      - name: Build Skynet
        id: build
        run: yarn build skynet

      - name: Install key file
        id: key
        run: |
          echo ${{ secrets.SKYNET_DEPLOY_KEY }} > deploy.key
          echo "::set-output name=filename::deploy.key"

      - name: Build Secrets File
        env:
          SECRET_FIRST: ${{ toJson(secrets.FIRST) }}
          SECRET_SECOND: ${{ toJson(secrets.SECOND) }}
        run: |
          echo "[Service]" > secrets.conf
          echo "Environment=FIRST=${SECRET_FIRST}"
          echo "Environment=SECOND=${SECRET_SECOND}"

      - name: Add Know Host Key for skynet server
        run: echo |1|oaCJoUC9NwyF57pNeWT38bNcnuw=|A47nfKc12xPvIsWHU4tI9A0ADk0= ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBHPfzupCfPSZak6Ql1wy8Co2nP/5zWGxkjACX+1sHsZsYpJ2hi/+g7AyXC5ebcuKLwpeJMsdVBRCvwsa7RySFYY= >> ~/.ssh/known_hosts

      - name: Add ssh config
        run: |
          echo Host deploy > ~/.ssh/config
          echo HostName skynet.onoblends.co >> ~/.ssh/config
          echo Port 22 >>  ~/.ssh/config
          echo User root >> ~/.ssh/config
          echo IdentityFile ${{ steps.key.outputs.filename }} >> ~/.ssh/config

      - name: Deploy on Remote
        run: |
          scp -Cr ${{ steps.build.outputs.path }} deploy-server:/home/prod/production
          scp secrets.conf deploy-server:/etc/systemd/system/ono.runway.d/
          ssh deploy-server systemctl stop ono.runway
          ssh deploy-server echo TODO: Database Migration 
          ssh deploy-server systemctl start ono.runway

      - name: Cleanup
        if: always()
        run: rm secrets.conf ${{ steps.key.outputs.filename }}
